server {
    listen 80;
    server_name localhost;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_proxied any;

    # Buffer size settings
    client_max_body_size 50M;
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    location / {
        # Update this to match your service name in docker-compose
        proxy_pass http://server:4000;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
    }
}



# events {
#     worker_connections 1024;
# }

# http {
#     upstream nodejs_app {
#         server nodejs:3000;
#     }

#     server {
#         listen 80;
#         server_name yourdomain.com www.yourdomain.com;

#         location /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }

#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }

#     server {
#         listen 443 ssl;
#         server_name yourdomain.com www.yourdomain.com;

#         ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

#         location / {
#             proxy_pass http://nodejs_app;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }